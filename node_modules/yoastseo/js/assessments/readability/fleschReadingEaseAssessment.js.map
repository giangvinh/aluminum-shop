{"version":3,"sources":["../../../../js/assessments/readability/fleschReadingEaseAssessment.js"],"names":["AssessmentResult","require","Assessment","inRange","getLanguageAvailability","availableLanguages","FleschReadingEaseAssessment","config","identifier","_config","paper","researcher","i18n","fleschReadingResult","getResearch","isApplicable","assessmentResult","calculatedResult","calculateResult","setScore","score","setText","resultText","text","dgettext","url","borders","veryEasy","feedback","scores","sprintf","easy","fairlyEasy","okay","fairlyDifficult","note","difficult","veryDifficult","isLanguageAvailable","getLocale","hasText","module","exports"],"mappings":"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","file":"fleschReadingEaseAssessment.js","sourcesContent":["\"use strict\";\nlet AssessmentResult = require(\"../../values/AssessmentResult.js\");\nlet Assessment = require(\"../../assessment.js\");\nconst inRange = require(\"lodash/inRange\");\nconst getLanguageAvailability = require(\"../../helpers/getLanguageAvailability.js\");\nconst availableLanguages = [\"en\", \"nl\", \"de\", \"it\", \"ru\"];\nclass FleschReadingEaseAssessment extends Assessment {\n    /**\n     * Sets the identifier and the config.\n     *\n     * @param {Object} config The configuration to use.\n     * @returns {void}\n     */\n    constructor(config) {\n        super();\n        this.identifier = \"fleschReadingEase\";\n        this._config = config;\n    }\n    /**\n     * The assessment that runs the FleschReading on the paper.\n     *\n     * @param {Object} paper The paper to run this assessment on.\n     * @param {Object} researcher The researcher used for the assessment.\n     * @param {Object} i18n The i18n-object used for parsing translations.\n     *\n     * @returns {Object} An assessmentResult with the score and formatted text.\n     */\n    getResult(paper, researcher, i18n) {\n        this.fleschReadingResult = researcher.getResearch(\"calculateFleschReading\");\n        if (this.isApplicable(paper)) {\n            let assessmentResult = new AssessmentResult(i18n);\n            const calculatedResult = this.calculateResult(i18n);\n            assessmentResult.setScore(calculatedResult.score);\n            assessmentResult.setText(calculatedResult.resultText);\n            return assessmentResult;\n        }\n        return null;\n    }\n    /**\n     * Calculates the assessment result based on the fleschReadingScore.\n     *\n     * @param {Object} i18n The i18n-object used for parsing translations.\n     *\n     * @returns {Object} Object with score and resultText.\n     */\n    calculateResult(i18n) {\n        // Results must be between 0 and 100;\n        if (this.fleschReadingResult < 0) {\n            this.fleschReadingResult = 0;\n        }\n        if (this.fleschReadingResult > 100) {\n            this.fleschReadingResult = 100;\n        }\n        /* Translators: %1$s expands to the numeric Flesch reading ease score,\n        %2$s to a link to a Yoast.com article about Flesch reading ease score,\n        %3$s to the easyness of reading,\n        %4$s expands to a note about the flesch reading score. */\n        let text = i18n.dgettext(\"js-text-analysis\", \"The copy scores %1$s in the %2$s test, which is considered %3$s to read. %4$s\");\n        const url = \"<a href='https://yoa.st/flesch-reading' target='_blank'>Flesch Reading Ease</a>\";\n        if (this.fleschReadingResult > this._config.borders.veryEasy) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"very easy\");\n            return {\n                score: this._config.scores.veryEasy,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, \"\"),\n            };\n        }\n        if (inRange(this.fleschReadingResult, this._config.borders.easy, this._config.borders.veryEasy)) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"easy\");\n            return {\n                score: this._config.scores.easy,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, \"\"),\n            };\n        }\n        if (inRange(this.fleschReadingResult, this._config.borders.fairlyEasy, this._config.borders.easy)) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"fairly easy\");\n            return {\n                score: this._config.scores.fairlyEasy,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, \"\"),\n            };\n        }\n        if (inRange(this.fleschReadingResult, this._config.borders.okay, this._config.borders.fairlyEasy)) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"ok\");\n            return {\n                score: this._config.scores.okay,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, \"\"),\n            };\n        }\n        if (inRange(this.fleschReadingResult, this._config.borders.fairlyDifficult, this._config.borders.okay)) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"fairly difficult\");\n            const note = i18n.dgettext(\"js-text-analysis\", \"Try to make shorter sentences to improve readability.\");\n            return {\n                score: this._config.scores.fairlyDifficult,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, note),\n            };\n        }\n        if (inRange(this.fleschReadingResult, this._config.borders.difficult, this._config.borders.fairlyDifficult)) {\n            const feedback = i18n.dgettext(\"js-text-analysis\", \"difficult\");\n            const note = i18n.dgettext(\"js-text-analysis\", \"Try to make shorter sentences, using less difficult words to improve readability.\");\n            return {\n                score: this._config.scores.difficult,\n                resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, note),\n            };\n        }\n        const feedback = i18n.dgettext(\"js-text-analysis\", \"very difficult\");\n        const note = i18n.dgettext(\"js-text-analysis\", \"Try to make shorter sentences, using less difficult words to improve readability.\");\n        return {\n            score: this._config.scores.veryDifficult,\n            resultText: i18n.sprintf(text, this.fleschReadingResult, url, feedback, note),\n        };\n    }\n    /**\n     * Checks if Flesch reading analysis is available for the language of the paper.\n     *\n     * @param {Object} paper The paper to have the Flesch score to be calculated for.\n     * @returns {boolean} Returns true if the language is available and the paper is not empty.\n     */\n    isApplicable(paper) {\n        const isLanguageAvailable = getLanguageAvailability(paper.getLocale(), availableLanguages);\n        return (isLanguageAvailable && paper.hasText());\n    }\n}\nmodule.exports = FleschReadingEaseAssessment;\n//# sourceMappingURL=fleschReadingEaseAssessment.js.map"]}