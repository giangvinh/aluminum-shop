{"version":3,"sources":["../../../../js/assessments/seo/pageTitleWidthAssessment.js"],"names":["AssessmentResult","require","Assessment","inRange","inRangeEndInclusive","merge","maximumLength","PageTitleWidthAssesment","config","defaultConfig","minLength","maxLength","scores","noTitle","widthTooShort","widthTooLong","widthCorrect","identifier","_config","paper","researcher","i18n","pageTitleWidth","getResearch","assessmentResult","setScore","calculateScore","setText","translateScore","max","actual","dgettext","module","exports"],"mappings":"AAAA;;;;;;;;;;AACA,IAAIA,mBAAmBC,QAAQ,kCAAR,CAAvB;AACA,IAAIC,aAAaD,QAAQ,qBAAR,CAAjB;AACA,IAAIE,UAAUF,QAAQ,uBAAR,EAAiCG,mBAA/C;AACA,IAAIC,QAAQJ,QAAQ,cAAR,CAAZ;AACA,IAAMK,gBAAgB,GAAtB;AACA;;;;IAGMC,uB;;;AACF;;;;;;;AAOA,uCAAyB;AAAA,YAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAAA;;AAErB,YAAIC,gBAAgB;AAChBC,uBAAW,GADK;AAEhBC,uBAAWL,aAFK;AAGhBM,oBAAQ;AACJC,yBAAS,CADL;AAEJC,+BAAe,CAFX;AAGJC,8BAAc,CAHV;AAIJC,8BAAc;AAJV;AAHQ,SAApB;AAUA,cAAKC,UAAL,GAAkB,YAAlB;AACA,cAAKC,OAAL,GAAeb,MAAMI,aAAN,EAAqBD,MAArB,CAAf;AAbqB;AAcxB;AACD;;;;;;;;;2CAKmB;AACf,mBAAOF,aAAP;AACH;AACD;;;;;;;;;;;;kCASUa,K,EAAOC,U,EAAYC,I,EAAM;AAC/B,gBAAIC,iBAAiBF,WAAWG,WAAX,CAAuB,gBAAvB,CAArB;AACA,gBAAIC,mBAAmB,IAAIxB,gBAAJ,EAAvB;AACAwB,6BAAiBC,QAAjB,CAA0B,KAAKC,cAAL,CAAoBJ,cAApB,CAA1B;AACAE,6BAAiBG,OAAjB,CAAyB,KAAKC,cAAL,CAAoBN,cAApB,EAAoCD,IAApC,CAAzB;AACA;AACAG,6BAAiBK,GAAjB,GAAuB,KAAKX,OAAL,CAAaP,SAApC;AACAa,6BAAiBM,MAAjB,GAA0BR,cAA1B;AACA,mBAAOE,gBAAP;AACH;AACD;;;;;;;;;;uCAOeF,c,EAAgB;AAC3B,gBAAInB,QAAQmB,cAAR,EAAwB,CAAxB,EAA2B,GAA3B,CAAJ,EAAqC;AACjC,uBAAO,KAAKJ,OAAL,CAAaN,MAAb,CAAoBE,aAA3B;AACH;AACD,gBAAIX,QAAQmB,cAAR,EAAwB,KAAKJ,OAAL,CAAaR,SAArC,EAAgD,KAAKQ,OAAL,CAAaP,SAA7D,CAAJ,EAA6E;AACzE,uBAAO,KAAKO,OAAL,CAAaN,MAAb,CAAoBI,YAA3B;AACH;AACD,gBAAIM,iBAAiB,KAAKJ,OAAL,CAAaP,SAAlC,EAA6C;AACzC,uBAAO,KAAKO,OAAL,CAAaN,MAAb,CAAoBG,YAA3B;AACH;AACD,mBAAO,KAAKG,OAAL,CAAaN,MAAb,CAAoBC,OAA3B;AACH;AACD;;;;;;;;;;;uCAQeS,c,EAAgBD,I,EAAM;AACjC,gBAAIlB,QAAQmB,cAAR,EAAwB,CAAxB,EAA2B,GAA3B,CAAJ,EAAqC;AACjC,uBAAOD,KAAKU,QAAL,CAAc,kBAAd,EAAkC,+GAAlC,CAAP;AACH;AACD,gBAAI5B,QAAQmB,cAAR,EAAwB,KAAKJ,OAAL,CAAaR,SAArC,EAAgD,KAAKQ,OAAL,CAAaP,SAA7D,CAAJ,EAA6E;AACzE,uBAAOU,KAAKU,QAAL,CAAc,kBAAd,EAAkC,kCAAlC,CAAP;AACH;AACD,gBAAIT,iBAAiB,KAAKJ,OAAL,CAAaP,SAAlC,EAA6C;AACzC,uBAAOU,KAAKU,QAAL,CAAc,kBAAd,EAAkC,iDAAlC,CAAP;AACH;AACD,mBAAOV,KAAKU,QAAL,CAAc,kBAAd,EAAkC,6BAAlC,CAAP;AACH;;;;EAxFiC7B,U;;AA0FtC8B,OAAOC,OAAP,GAAiB1B,uBAAjB;AACA","file":"pageTitleWidthAssessment.js","sourcesContent":["\"use strict\";\nlet AssessmentResult = require(\"../../values/AssessmentResult.js\");\nlet Assessment = require(\"../../assessment.js\");\nlet inRange = require(\"../../helpers/inRange\").inRangeEndInclusive;\nlet merge = require(\"lodash/merge\");\nconst maximumLength = 600;\n/**\n * Represents the assessmenth that will calculate if the width of the page title is correct.\n */\nclass PageTitleWidthAssesment extends Assessment {\n    /**\n     * Sets the identifier and the config.\n     *\n     * @param {object} config The configuration to use.\n     *\n     * @returns {void}\n     */\n    constructor(config = {}) {\n        super();\n        let defaultConfig = {\n            minLength: 400,\n            maxLength: maximumLength,\n            scores: {\n                noTitle: 1,\n                widthTooShort: 6,\n                widthTooLong: 3,\n                widthCorrect: 9,\n            },\n        };\n        this.identifier = \"titleWidth\";\n        this._config = merge(defaultConfig, config);\n    }\n    /**\n     * Returns the maximum length.\n     *\n     * @returns {number} The maximum length.\n     */\n    getMaximumLength() {\n        return maximumLength;\n    }\n    /**\n     * Runs the pageTitleWidth module, based on this returns an assessment result with score.\n     *\n     * @param {Paper} paper The paper to use for the assessment.\n     * @param {Researcher} researcher The researcher used for calling research.\n     * @param {object} i18n The object used for translations\n     *\n     * @returns {AssessmentResult} The assessment result.\n     */\n    getResult(paper, researcher, i18n) {\n        let pageTitleWidth = researcher.getResearch(\"pageTitleWidth\");\n        let assessmentResult = new AssessmentResult();\n        assessmentResult.setScore(this.calculateScore(pageTitleWidth));\n        assessmentResult.setText(this.translateScore(pageTitleWidth, i18n));\n        // Max and actual are used in the snippet editor progress bar.\n        assessmentResult.max = this._config.maxLength;\n        assessmentResult.actual = pageTitleWidth;\n        return assessmentResult;\n    }\n    /**\n     * Returns the score for the pageTitleWidth\n     *\n     * @param {number} pageTitleWidth The width of the pageTitle.\n     *\n     * @returns {number} The calculated score.\n     */\n    calculateScore(pageTitleWidth) {\n        if (inRange(pageTitleWidth, 1, 400)) {\n            return this._config.scores.widthTooShort;\n        }\n        if (inRange(pageTitleWidth, this._config.minLength, this._config.maxLength)) {\n            return this._config.scores.widthCorrect;\n        }\n        if (pageTitleWidth > this._config.maxLength) {\n            return this._config.scores.widthTooLong;\n        }\n        return this._config.scores.noTitle;\n    }\n    /**\n     * Translates the pageTitleWidth score to a message the user can understand.\n     *\n     * @param {number} pageTitleWidth The width of the pageTitle.\n     * @param {object} i18n The object used for translations.\n     *\n     * @returns {string} The translated string.\n     */\n    translateScore(pageTitleWidth, i18n) {\n        if (inRange(pageTitleWidth, 1, 400)) {\n            return i18n.dgettext(\"js-text-analysis\", \"The SEO title is too short. Use the space to add keyword variations or create compelling call-to-action copy.\");\n        }\n        if (inRange(pageTitleWidth, this._config.minLength, this._config.maxLength)) {\n            return i18n.dgettext(\"js-text-analysis\", \"The SEO title has a nice length.\");\n        }\n        if (pageTitleWidth > this._config.maxLength) {\n            return i18n.dgettext(\"js-text-analysis\", \"The SEO title is wider than the viewable limit.\");\n        }\n        return i18n.dgettext(\"js-text-analysis\", \"Please create an SEO title.\");\n    }\n}\nmodule.exports = PageTitleWidthAssesment;\n//# sourceMappingURL=pageTitleWidthAssessment.js.map"]}