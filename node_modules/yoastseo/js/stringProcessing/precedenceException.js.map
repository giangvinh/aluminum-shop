{"version":3,"sources":["../../../js/stringProcessing/precedenceException.js"],"names":["getWordIndices","require","precedesIndex","arrayToRegex","cannotBeBetweenAuxiliaryAndParticipleFrench","cannotBeBetweenPassiveAuxiliaryAndParticiple","cannotBeBetweenAuxiliaryAndParticipleEnglish","cannotBeBetweenAuxiliaryAndParticipleSpanish","module","exports","sentencePart","participleIndex","language","precedenceExceptionRegex","precedenceExceptionMatch"],"mappings":"AAAA;;AACA,IAAIA,iBAAiBC,QAAQ,gEAAR,CAArB;AACA,IAAIC,gBAAgBD,QAAQ,iBAAR,CAApB;AACA,IAAIE,eAAeF,QAAQ,2BAAR,CAAnB;AACA,IAAIG,8CAA8CH,QAAQ,uCAAR,IAAmDI,4CAArG;AACA,IAAIC,+CAA+CL,QAAQ,wCAAR,IAAoDI,4CAAvG;AACA,IAAIE,+CAA+CN,QAAQ,wCAAR,IAAoDI,4CAAvG;AACA;;;;;;;;;;;AAWAG,OAAOC,OAAP,GAAiB,UAAUC,YAAV,EAAwBC,eAAxB,EAAyCC,QAAzC,EAAmD;AAChE,QAAIC,wBAAJ;AACA,YAAQD,QAAR;AACI,aAAK,IAAL;AACIC,uCAA2BV,aAAaC,2CAAb,CAA3B;AACA;AACJ,aAAK,IAAL;AACIS,uCAA2BV,aAAaI,4CAAb,CAA3B;AACA;AACJ,aAAK,IAAL;AACA;AACIM,uCAA2BV,aAAaG,4CAAb,CAA3B;AACA;AAVR;AAYA,QAAIQ,2BAA2Bd,eAAeU,YAAf,EAA6BG,wBAA7B,CAA/B;AACA,WAAOX,cAAcY,wBAAd,EAAwCH,eAAxC,CAAP;AACH,CAhBD;AAiBA","file":"precedenceException.js","sourcesContent":["\"use strict\";\nvar getWordIndices = require(\"../researches/passiveVoice/periphrastic/getIndicesWithRegex.js\");\nvar precedesIndex = require(\"./precedesIndex\");\nvar arrayToRegex = require(\"./createRegexFromArray.js\");\nvar cannotBeBetweenAuxiliaryAndParticipleFrench = require(\"../researches/french/functionWords.js\")().cannotBeBetweenPassiveAuxiliaryAndParticiple;\nvar cannotBeBetweenAuxiliaryAndParticipleEnglish = require(\"../researches/english/functionWords.js\")().cannotBeBetweenPassiveAuxiliaryAndParticiple;\nvar cannotBeBetweenAuxiliaryAndParticipleSpanish = require(\"../researches/spanish/functionWords.js\")().cannotBeBetweenPassiveAuxiliaryAndParticiple;\n/**\n * Checks whether a word from the precedence exception list occurs anywhere in the sentence part before the participle.\n * If this is the case, the sentence part is not passive.\n *\n * @param {string} sentencePart The sentence part that contains the participle.\n * @param {number} participleIndex The index of the participle.\n * @param {string} language The language of the participle.\n *\n * @returns {boolean} Returns true if a word from the precedence exception list occurs anywhere in the\n * sentence part before the participle, otherwise returns false.\n */\nmodule.exports = function (sentencePart, participleIndex, language) {\n    var precedenceExceptionRegex;\n    switch (language) {\n        case \"fr\":\n            precedenceExceptionRegex = arrayToRegex(cannotBeBetweenAuxiliaryAndParticipleFrench);\n            break;\n        case \"es\":\n            precedenceExceptionRegex = arrayToRegex(cannotBeBetweenAuxiliaryAndParticipleSpanish);\n            break;\n        case \"en\":\n        default:\n            precedenceExceptionRegex = arrayToRegex(cannotBeBetweenAuxiliaryAndParticipleEnglish);\n            break;\n    }\n    var precedenceExceptionMatch = getWordIndices(sentencePart, precedenceExceptionRegex);\n    return precedesIndex(precedenceExceptionMatch, participleIndex);\n};\n//# sourceMappingURL=precedenceException.js.map"]}