{"version":3,"sources":["../../../js/stringProcessing/directPrecedenceException.js"],"names":["getWordIndices","require","includesIndex","arrayToRegex","cannotDirectlyPrecedePassiveParticipleFrench","cannotDirectlyPrecedePassiveParticiple","cannotDirectlyPrecedePassiveParticipleEnglish","cannotDirectlyPrecedePassiveParticipleSpanish","module","exports","sentencePart","participleIndex","language","directPrecedenceExceptionRegex","directPrecedenceExceptionMatch"],"mappings":"AAAA;;AACA,IAAIA,iBAAiBC,QAAQ,gEAAR,CAArB;AACA,IAAIC,gBAAgBD,QAAQ,iBAAR,CAApB;AACA,IAAIE,eAAeF,QAAQ,2BAAR,CAAnB;AACA,IAAIG,+CAA+CH,QAAQ,uCAAR,IAAmDI,sCAAtG;AACA,IAAIC,gDAAgDL,QAAQ,wCAAR,IAAoDI,sCAAxG;AACA,IAAIE,gDAAgDN,QAAQ,wCAAR,IAAoDI,sCAAxG;AACA;;;;;;;;;;;AAWAG,OAAOC,OAAP,GAAiB,UAAUC,YAAV,EAAwBC,eAAxB,EAAyCC,QAAzC,EAAmD;AAChE,QAAIC,8BAAJ;AACA,YAAQD,QAAR;AACI,aAAK,IAAL;AACIC,6CAAiCV,aAAaC,4CAAb,CAAjC;AACA;AACJ,aAAK,IAAL;AACIS,6CAAiCV,aAAaI,6CAAb,CAAjC;AACA;AACJ,aAAK,IAAL;AACA;AACIM,6CAAiCV,aAAaG,6CAAb,CAAjC;AACA;AAVR;AAYA,QAAIQ,iCAAiCd,eAAeU,YAAf,EAA6BG,8BAA7B,CAArC;AACA,WAAOX,cAAcY,8BAAd,EAA8CH,eAA9C,CAAP;AACH,CAhBD;AAiBA","file":"directPrecedenceException.js","sourcesContent":["\"use strict\";\nvar getWordIndices = require(\"../researches/passiveVoice/periphrastic/getIndicesWithRegex.js\");\nvar includesIndex = require(\"./includesIndex\");\nvar arrayToRegex = require(\"./createRegexFromArray.js\");\nvar cannotDirectlyPrecedePassiveParticipleFrench = require(\"../researches/french/functionWords.js\")().cannotDirectlyPrecedePassiveParticiple;\nvar cannotDirectlyPrecedePassiveParticipleEnglish = require(\"../researches/english/functionWords.js\")().cannotDirectlyPrecedePassiveParticiple;\nvar cannotDirectlyPrecedePassiveParticipleSpanish = require(\"../researches/spanish/functionWords.js\")().cannotDirectlyPrecedePassiveParticiple;\n/**\n * Checks whether the participle is directly preceded by a word from the direct precedence exception list.\n * If this is the case, the sentence part is not passive.\n *\n * @param {string} sentencePart The sentence part that contains the participle.\n * @param {number} participleIndex The index of the participle.\n * @param {string} language The language of the participle.\n *\n * @returns {boolean} Returns true if a word from the direct precedence exception list is directly preceding\n * the participle, otherwise returns false.\n */\nmodule.exports = function (sentencePart, participleIndex, language) {\n    var directPrecedenceExceptionRegex;\n    switch (language) {\n        case \"fr\":\n            directPrecedenceExceptionRegex = arrayToRegex(cannotDirectlyPrecedePassiveParticipleFrench);\n            break;\n        case \"es\":\n            directPrecedenceExceptionRegex = arrayToRegex(cannotDirectlyPrecedePassiveParticipleSpanish);\n            break;\n        case \"en\":\n        default:\n            directPrecedenceExceptionRegex = arrayToRegex(cannotDirectlyPrecedePassiveParticipleEnglish);\n            break;\n    }\n    var directPrecedenceExceptionMatch = getWordIndices(sentencePart, directPrecedenceExceptionRegex);\n    return includesIndex(directPrecedenceExceptionMatch, participleIndex);\n};\n//# sourceMappingURL=directPrecedenceException.js.map"]}