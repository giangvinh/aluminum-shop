{"version":3,"sources":["../../js/researcher.js"],"names":["Object","defineProperty","exports","value","sentences_1","require","merge","InvalidTypeError","MissingArgument","isUndefined","isEmpty","wordCountInText","getLinkStatistics","linkCount","getLinks","urlLength","findKeywordInPageTitle","matchKeywordInSubheadings","getKeywordDensity","keywordCount","stopWordsInKeyword","stopWordsInUrl","calculateFleschReading","metaDescriptionLength","imageCount","altTagCount","keyphraseLength","metaDescriptionKeyword","keywordCountInUrl","findKeywordInFirstParagraph","pageTitleWidth","wordComplexity","getParagraphLength","countSentencesFromText","countSentencesFromDescription","getSubheadingTextLengths","findTransitionWords","passiveVoice","getSentenceBeginnings","relevantWords","readingTime","Researcher","paper","setPaper","defaultResearches","firstParagraph","sentences","default","customResearches","prototype","addResearch","name","research","Function","hasResearch","keys","getAvailableResearches","filter","length","getResearch","module"],"mappings":"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","file":"researcher.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sentences_1 = require(\"./researches/sentences\");\nvar merge = require(\"lodash/merge\");\nvar InvalidTypeError = require(\"./errors/invalidType\");\nvar MissingArgument = require(\"./errors/missingArgument\");\nvar isUndefined = require(\"lodash/isUndefined\");\nvar isEmpty = require(\"lodash/isEmpty\");\n// Researches\nvar wordCountInText = require(\"./researches/wordCountInText.js\");\nvar getLinkStatistics = require(\"./researches/getLinkStatistics.js\");\nvar linkCount = require(\"./researches/countLinks.js\");\nvar getLinks = require(\"./researches/getLinks.js\");\nvar urlLength = require(\"./researches/urlIsTooLong.js\");\nvar findKeywordInPageTitle = require(\"./researches/findKeywordInPageTitle.js\");\nvar matchKeywordInSubheadings = require(\"./researches/matchKeywordInSubheadings.js\");\nconst getKeywordDensity = require(\"./researches/getKeywordDensity.js\");\nconst keywordCount = require(\"./researches/keywordCount\");\nvar stopWordsInKeyword = require(\"./researches/stopWordsInKeyword\");\nvar stopWordsInUrl = require(\"./researches/stopWordsInUrl\");\nvar calculateFleschReading = require(\"./researches/calculateFleschReading.js\");\nvar metaDescriptionLength = require(\"./researches/metaDescriptionLength.js\");\nvar imageCount = require(\"./researches/imageCountInText.js\");\nvar altTagCount = require(\"./researches/imageAltTags.js\");\nvar keyphraseLength = require(\"./researches/keyphraseLength\");\nvar metaDescriptionKeyword = require(\"./researches/metaDescriptionKeyword.js\");\nvar keywordCountInUrl = require(\"./researches/keywordCountInUrl\");\nvar findKeywordInFirstParagraph = require(\"./researches/findKeywordInFirstParagraph.js\");\nvar pageTitleWidth = require(\"./researches/pageTitleWidth.js\");\nvar wordComplexity = require(\"./researches/getWordComplexity.js\");\nvar getParagraphLength = require(\"./researches/getParagraphLength.js\");\nvar countSentencesFromText = require(\"./researches/countSentencesFromText.js\");\nvar countSentencesFromDescription = require(\"./researches/countSentencesFromDescription.js\");\nvar getSubheadingTextLengths = require(\"./researches/getSubheadingTextLengths.js\");\nvar findTransitionWords = require(\"./researches/findTransitionWords.js\");\nvar passiveVoice = require(\"./researches/getPassiveVoice.js\");\nvar getSentenceBeginnings = require(\"./researches/getSentenceBeginnings.js\");\nvar relevantWords = require(\"./researches/relevantWords\");\nvar readingTime = require(\"./researches/readingTime\");\n/**\n * This contains all possible, default researches.\n * @param {Paper} paper The Paper object that is needed within the researches.\n * @constructor\n * @throws {InvalidTypeError} Parameter needs to be an instance of the Paper object.\n */\nvar Researcher = function (paper) {\n    this.setPaper(paper);\n    this.defaultResearches = {\n        urlLength: urlLength,\n        wordCountInText: wordCountInText,\n        findKeywordInPageTitle: findKeywordInPageTitle,\n        calculateFleschReading: calculateFleschReading,\n        getLinkStatistics: getLinkStatistics,\n        getLinks: getLinks,\n        linkCount: linkCount,\n        imageCount: imageCount,\n        altTagCount: altTagCount,\n        matchKeywordInSubheadings: matchKeywordInSubheadings,\n        keywordCount: keywordCount,\n        getKeywordDensity: getKeywordDensity,\n        stopWordsInKeyword: stopWordsInKeyword,\n        stopWordsInUrl: stopWordsInUrl,\n        metaDescriptionLength: metaDescriptionLength,\n        keyphraseLength: keyphraseLength,\n        keywordCountInUrl: keywordCountInUrl,\n        firstParagraph: findKeywordInFirstParagraph,\n        metaDescriptionKeyword: metaDescriptionKeyword,\n        pageTitleWidth: pageTitleWidth,\n        wordComplexity: wordComplexity,\n        getParagraphLength: getParagraphLength,\n        countSentencesFromText: countSentencesFromText,\n        countSentencesFromDescription: countSentencesFromDescription,\n        getSubheadingTextLengths: getSubheadingTextLengths,\n        findTransitionWords: findTransitionWords,\n        passiveVoice: passiveVoice,\n        getSentenceBeginnings: getSentenceBeginnings,\n        relevantWords: relevantWords,\n        readingTime: readingTime,\n        sentences: sentences_1.default,\n    };\n    this.customResearches = {};\n};\n/**\n * Set the Paper associated with the Researcher.\n * @param {Paper} paper The Paper to use within the Researcher\n * @throws {InvalidTypeError} Parameter needs to be an instance of the Paper object.\n * @returns {void}\n */\nResearcher.prototype.setPaper = function (paper) {\n    this.paper = paper;\n};\n/**\n * Add a custom research that will be available within the Researcher.\n * @param {string} name A name to reference the research by.\n * @param {function} research The function to be added to the Researcher.\n * @throws {MissingArgument} Research name cannot be empty.\n * @throws {InvalidTypeError} The research requires a valid Function callback.\n * @returns {void}\n */\nResearcher.prototype.addResearch = function (name, research) {\n    if (isUndefined(name) || isEmpty(name)) {\n        throw new MissingArgument(\"Research name cannot be empty\");\n    }\n    if (!(research instanceof Function)) {\n        throw new InvalidTypeError(\"The research requires a Function callback.\");\n    }\n    this.customResearches[name] = research;\n};\n/**\n * Check wheter or not the research is known by the Researcher.\n * @param {string} name The name to reference the research by.\n * @returns {boolean} Whether or not the research is known by the Researcher\n */\nResearcher.prototype.hasResearch = function (name) {\n    return Object.keys(this.getAvailableResearches()).filter(function (research) {\n        return research === name;\n    }).length > 0;\n};\n/**\n * Return all available researches.\n * @returns {Object} An object containing all available researches.\n */\nResearcher.prototype.getAvailableResearches = function () {\n    return merge(this.defaultResearches, this.customResearches);\n};\n/**\n * Return the Research by name.\n * @param {string} name The name to reference the research by.\n * @returns {*} Returns the result of the research or false if research does not exist.\n * @throws {MissingArgument} Research name cannot be empty.\n */\nResearcher.prototype.getResearch = function (name) {\n    if (isUndefined(name) || isEmpty(name)) {\n        throw new MissingArgument(\"Research name cannot be empty\");\n    }\n    if (!this.hasResearch(name)) {\n        return false;\n    }\n    return this.getAvailableResearches()[name](this.paper, this);\n};\nmodule.exports = Researcher;\n//# sourceMappingURL=researcher.js.map"]}