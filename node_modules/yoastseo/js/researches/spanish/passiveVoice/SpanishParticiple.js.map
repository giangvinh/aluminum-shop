{"version":3,"sources":["../../../../../js/researches/spanish/passiveVoice/SpanishParticiple.js"],"names":["Participle","require","checkException","directPrecedenceException","precedenceException","SpanishParticiple","participle","sentencePart","attributes","call","inherits","prototype","isPassive","getSentencePart","participleIndex","indexOf","getParticiple","language","getLanguage","module","exports"],"mappings":"AAAA;;AACA,IAAIA,aAAaC,QAAQ,+BAAR,CAAjB;AACA,IAAIC,iBAAiBD,QAAQ,mDAAR,CAArB;AACA,IAAIE,4BAA4BF,QAAQ,qDAAR,CAAhC;AACA,IAAIG,sBAAsBH,QAAQ,+CAAR,CAA1B;AACA;;;;;;;;;AASA,IAAII,oBAAoB,SAApBA,iBAAoB,CAAUC,UAAV,EAAsBC,YAAtB,EAAoCC,UAApC,EAAgD;AACpER,aAAWS,IAAX,CAAgB,IAAhB,EAAsBH,UAAtB,EAAkCC,YAAlC,EAAgDC,UAAhD;AACAN,iBAAeO,IAAf,CAAoB,IAApB;AACH,CAHD;AAIAR,QAAQ,MAAR,EAAgBS,QAAhB,CAAyBL,iBAAzB,EAA4CL,UAA5C;AACA;;;;;;AAMAK,kBAAkBM,SAAlB,CAA4BC,SAA5B,GAAwC,YAAY;AAChD,MAAIL,eAAe,KAAKM,eAAL,EAAnB;AACA,MAAIC,kBAAkBP,aAAaQ,OAAb,CAAqB,KAAKC,aAAL,EAArB,CAAtB;AACA,MAAIC,WAAW,KAAKC,WAAL,EAAf;AACA,SAAO,CAAC,KAAKf,yBAAL,CAA+BI,YAA/B,EAA6CO,eAA7C,EAA8DG,QAA9D,CAAD,IACH,CAAC,KAAKb,mBAAL,CAAyBG,YAAzB,EAAuCO,eAAvC,EAAwDG,QAAxD,CADL;AAEH,CAND;AAOAZ,kBAAkBM,SAAlB,CAA4BR,yBAA5B,GAAwDA,yBAAxD;AACAE,kBAAkBM,SAAlB,CAA4BP,mBAA5B,GAAkDA,mBAAlD;AACAe,OAAOC,OAAP,GAAiBf,iBAAjB;AACA","file":"SpanishParticiple.js","sourcesContent":["\"use strict\";\nvar Participle = require(\"../../../values/Participle.js\");\nvar checkException = require(\"../../passiveVoice/periphrastic/checkException.js\");\nvar directPrecedenceException = require(\"../../../stringProcessing/directPrecedenceException\");\nvar precedenceException = require(\"../../../stringProcessing/precedenceException\");\n/**\n * Creates an Participle object for the Spanish language.\n *\n * @param {string} participle The participle.\n * @param {string} sentencePart The sentence part that contains the participle.\n * @param {Object} attributes The attributes object.\n *\n * @constructor\n */\nvar SpanishParticiple = function (participle, sentencePart, attributes) {\n    Participle.call(this, participle, sentencePart, attributes);\n    checkException.call(this);\n};\nrequire(\"util\").inherits(SpanishParticiple, Participle);\n/**\n * Checks if any exceptions are applicable to this participle that would result in the sentence part not being passive.\n * If no exceptions are found, the sentence part is passive.\n *\n * @returns {boolean} Returns true if no exception is found.\n */\nSpanishParticiple.prototype.isPassive = function () {\n    let sentencePart = this.getSentencePart();\n    let participleIndex = sentencePart.indexOf(this.getParticiple());\n    let language = this.getLanguage();\n    return !this.directPrecedenceException(sentencePart, participleIndex, language) &&\n        !this.precedenceException(sentencePart, participleIndex, language);\n};\nSpanishParticiple.prototype.directPrecedenceException = directPrecedenceException;\nSpanishParticiple.prototype.precedenceException = precedenceException;\nmodule.exports = SpanishParticiple;\n//# sourceMappingURL=SpanishParticiple.js.map"]}