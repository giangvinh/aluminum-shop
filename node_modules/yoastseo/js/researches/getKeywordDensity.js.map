{"version":3,"sources":["../../../js/researches/getKeywordDensity.js"],"names":["countWords","require","module","exports","paper","researcher","wordCount","getText","keywordCount","getResearch"],"mappings":"AAAA;AACA;;AACA,IAAMA,aAAaC,QAAQ,mCAAR,CAAnB;AACA;;;;;;;AAOAC,OAAOC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,UAAjB,EAA6B;AAC1C,QAAMC,YAAYN,WAAWI,MAAMG,OAAN,EAAX,CAAlB;AACA,QAAID,cAAc,CAAlB,EAAqB;AACjB,eAAO,CAAP;AACH;AACD,QAAME,eAAeH,WAAWI,WAAX,CAAuB,cAAvB,CAArB;AACA,WAAQD,eAAeF,SAAhB,GAA6B,GAApC;AACH,CAPD;AAQA","file":"getKeywordDensity.js","sourcesContent":["\"use strict\";\n/** @module analyses/getKeywordDensity */\nconst countWords = require(\"../stringProcessing/countWords.js\");\n/**\n * Calculates the keyword density .\n *\n * @param {object} paper The paper containing keyword and text.\n * @param {object} researcher The researcher.\n * @returns {number} The keyword density.\n */\nmodule.exports = function (paper, researcher) {\n    const wordCount = countWords(paper.getText());\n    if (wordCount === 0) {\n        return 0;\n    }\n    const keywordCount = researcher.getResearch(\"keywordCount\");\n    return (keywordCount / wordCount) * 100;\n};\n//# sourceMappingURL=getKeywordDensity.js.map"]}