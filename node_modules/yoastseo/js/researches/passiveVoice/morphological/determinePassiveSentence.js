"use strict";

var filter = require("lodash/filter");
var getWords = require("../../../stringProcessing/getWords.js");
// Verb-form lists per language
var getPassiveVerbsRussian = require("../../russian/passiveVoice/participlesShortenedList.js")().all;
/**
 * Matches the sentence against passive verbs.
 *
 * @param {string} sentence The sentence to match against.
 * @param {Array} passiveVerbs The array containing passive verb-forms.
 * @returns {Array} The found passive verbs.
 */
var matchPassiveVerbs = function matchPassiveVerbs(sentence, passiveVerbs) {
    return filter(getWords(sentence), function (word) {
        return passiveVerbs.includes(word.toLocaleLowerCase());
    });
};
/**
 * Checks the passed sentences to see if they contain passive verb-forms.
 *
 * @param {string} sentence The sentence to match against.
 * @param {string} language The language of the text.
 * @returns {Array} The list of encountered passive verbs.
 */
var determineSentenceIsPassive = function determineSentenceIsPassive(sentence, language) {
    var passiveVerbs = [];
    switch (language) {
        case "ru":
            passiveVerbs = getPassiveVerbsRussian;
            break;
    }
    return matchPassiveVerbs(sentence, passiveVerbs).length !== 0;
};
/**
 * Determines whether a sentence is passive.
 *
 * @param {string} sentenceText The sentence to determine voice for.
 * @param {string} language The language of the sentence part.

 * @returns {boolean} Returns true if passive, otherwise returns false.
 */
module.exports = function (sentenceText, language) {
    return determineSentenceIsPassive(sentenceText, language);
};
//# sourceMappingURL=determinePassiveSentence.js.map
//# sourceMappingURL=determinePassiveSentence.js.map
