{"version":3,"sources":["../../../../../js/researches/passiveVoice/morphological/determinePassiveSentence.js"],"names":["filter","require","getWords","getPassiveVerbsRussian","all","matchPassiveVerbs","sentence","passiveVerbs","word","includes","toLocaleLowerCase","determineSentenceIsPassive","language","length","module","exports","sentenceText"],"mappings":"AAAA;;AACA,IAAMA,SAASC,QAAQ,eAAR,CAAf;AACA,IAAMC,WAAWD,QAAQ,uCAAR,CAAjB;AACA;AACA,IAAME,yBAAyBF,QAAQ,wDAAR,IAAoEG,GAAnG;AACA;;;;;;;AAOA,IAAIC,oBAAoB,SAApBA,iBAAoB,CAAUC,QAAV,EAAoBC,YAApB,EAAkC;AACtD,WAAOP,OAAOE,SAASI,QAAT,CAAP,EAA2B,UAAUE,IAAV,EAAgB;AAC9C,eAAOD,aAAaE,QAAb,CAAsBD,KAAKE,iBAAL,EAAtB,CAAP;AACH,KAFM,CAAP;AAGH,CAJD;AAKA;;;;;;;AAOA,IAAIC,6BAA6B,SAA7BA,0BAA6B,CAAUL,QAAV,EAAoBM,QAApB,EAA8B;AAC3D,QAAIL,eAAe,EAAnB;AACA,YAAQK,QAAR;AACI,aAAK,IAAL;AACIL,2BAAeJ,sBAAf;AACA;AAHR;AAKA,WAAOE,kBAAkBC,QAAlB,EAA4BC,YAA5B,EAA0CM,MAA1C,KAAqD,CAA5D;AACH,CARD;AASA;;;;;;;;AAQAC,OAAOC,OAAP,GAAiB,UAAUC,YAAV,EAAwBJ,QAAxB,EAAkC;AAC/C,WAAOD,2BAA2BK,YAA3B,EAAyCJ,QAAzC,CAAP;AACH,CAFD;AAGA","file":"determinePassiveSentence.js","sourcesContent":["\"use strict\";\nconst filter = require(\"lodash/filter\");\nconst getWords = require(\"../../../stringProcessing/getWords.js\");\n// Verb-form lists per language\nconst getPassiveVerbsRussian = require(\"../../russian/passiveVoice/participlesShortenedList.js\")().all;\n/**\n * Matches the sentence against passive verbs.\n *\n * @param {string} sentence The sentence to match against.\n * @param {Array} passiveVerbs The array containing passive verb-forms.\n * @returns {Array} The found passive verbs.\n */\nlet matchPassiveVerbs = function (sentence, passiveVerbs) {\n    return filter(getWords(sentence), function (word) {\n        return passiveVerbs.includes(word.toLocaleLowerCase());\n    });\n};\n/**\n * Checks the passed sentences to see if they contain passive verb-forms.\n *\n * @param {string} sentence The sentence to match against.\n * @param {string} language The language of the text.\n * @returns {Array} The list of encountered passive verbs.\n */\nlet determineSentenceIsPassive = function (sentence, language) {\n    let passiveVerbs = [];\n    switch (language) {\n        case \"ru\":\n            passiveVerbs = getPassiveVerbsRussian;\n            break;\n    }\n    return matchPassiveVerbs(sentence, passiveVerbs).length !== 0;\n};\n/**\n * Determines whether a sentence is passive.\n *\n * @param {string} sentenceText The sentence to determine voice for.\n * @param {string} language The language of the sentence part.\n\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nmodule.exports = function (sentenceText, language) {\n    return determineSentenceIsPassive(sentenceText, language);\n};\n//# sourceMappingURL=determinePassiveSentence.js.map"]}