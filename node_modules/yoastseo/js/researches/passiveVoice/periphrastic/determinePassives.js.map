{"version":3,"sources":["../../../../../js/researches/passiveVoice/periphrastic/determinePassives.js"],"names":["getParticiples","require","determineSentencePartIsPassive","module","exports","sentencePart","auxiliaries","language","participles"],"mappings":"AAAA;;AACA,IAAMA,iBAAiBC,QAAQ,qBAAR,CAAvB;AACA,IAAMC,iCAAiCD,QAAQ,qCAAR,CAAvC;AACA;;;;;;;;AAQAE,OAAOC,OAAP,GAAiB,UAAUC,YAAV,EAAwBC,WAAxB,EAAqCC,QAArC,EAA+C;AAC5D,MAAIC,cAAcR,eAAeK,YAAf,EAA6BC,WAA7B,EAA0CC,QAA1C,CAAlB;AACA,SAAOL,+BAA+BM,WAA/B,CAAP;AACH,CAHD;AAIA","file":"determinePassives.js","sourcesContent":["\"use strict\";\nconst getParticiples = require(\"./getParticiples.js\");\nconst determineSentencePartIsPassive = require(\"./determineSentencePartIsPassive.js\");\n/**\n * Determines whether a sentence part is passive.\n *\n * @param {string} sentencePart The sentence part to determine voice for.\n * @param {Array} auxiliaries The auxiliaries to be used for creating SentenceParts.\n * @param {string} language The language to determine voice for.\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nmodule.exports = function (sentencePart, auxiliaries, language) {\n    let participles = getParticiples(sentencePart, auxiliaries, language);\n    return determineSentencePartIsPassive(participles);\n};\n//# sourceMappingURL=determinePassives.js.map"]}