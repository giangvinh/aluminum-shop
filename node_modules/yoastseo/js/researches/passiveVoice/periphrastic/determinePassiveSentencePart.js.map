{"version":3,"sources":["../../../../../js/researches/passiveVoice/periphrastic/determinePassiveSentencePart.js"],"names":["arrayToRegex","require","determineSentencePartIsPassive","auxiliariesGerman","allAuxiliaries","getParticiplesGerman","getParticiples","module","exports","sentencePartText","auxiliaries","language","participles","passive","auxiliaryMatches","match"],"mappings":"AAAA;;AACA,IAAMA,eAAeC,QAAQ,mDAAR,CAArB;AACA,IAAMC,iCAAiCD,QAAQ,qCAAR,CAAvC;AACA;AACA,IAAME,oBAAoBF,QAAQ,0CAAR,IAAsDG,cAAhF;AACA,IAAMC,uBAAuBJ,QAAQ,6CAAR,CAA7B;AACA;AACA,IAAMK,iBAAiBL,QAAQ,qBAAR,CAAvB;AACA;;;;;;;;;AASAM,OAAOC,OAAP,GAAiB,UAAUC,gBAAV,EAA4BC,WAA5B,EAAyCC,QAAzC,EAAmD;AAChE,QAAIC,cAAc,EAAlB;AACA,QAAID,aAAa,IAAjB,EAAuB;AACnB,YAAIE,UAAU,KAAd;AACA,YAAIC,mBAAmBL,iBAAiBM,KAAjB,CAAuBf,aAAaG,iBAAb,CAAvB,CAAvB;AACA,YAAIW,qBAAqB,IAAzB,EAA+B;AAC3B,mBAAOD,OAAP;AACH;AACDD,sBAAcP,qBAAqBI,gBAArB,EAAuCC,WAAvC,EAAoDC,QAApD,CAAd;AACH,KAPD,MAQK;AACDC,sBAAcN,eAAeG,gBAAf,EAAiCC,WAAjC,EAA8CC,QAA9C,CAAd;AACH;AACD,WAAOT,+BAA+BU,WAA/B,CAAP;AACH,CAdD;AAeA","file":"determinePassiveSentencePart.js","sourcesContent":["\"use strict\";\nconst arrayToRegex = require(\"../../../stringProcessing/createRegexFromArray.js\");\nconst determineSentencePartIsPassive = require(\"./determineSentencePartIsPassive.js\");\n// Auxiliaries and getParticiples (specific for German)\nconst auxiliariesGerman = require(\"../../german/passiveVoice/auxiliaries.js\")().allAuxiliaries;\nconst getParticiplesGerman = require(\"../../german/passiveVoice/getParticiples.js\");\n// General getParticiples\nconst getParticiples = require(\"./getParticiples.js\");\n/**\n * Determines whether a sentence part is passive.\n *\n * @param {string} sentencePartText The sentence part to determine voice for.\n * @param {Array} auxiliaries A list with auxiliaries in this sentence part.\n * @param {string} language The language of the sentence part.\n\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nmodule.exports = function (sentencePartText, auxiliaries, language) {\n    let participles = [];\n    if (language === \"de\") {\n        let passive = false;\n        let auxiliaryMatches = sentencePartText.match(arrayToRegex(auxiliariesGerman));\n        if (auxiliaryMatches === null) {\n            return passive;\n        }\n        participles = getParticiplesGerman(sentencePartText, auxiliaries, language);\n    }\n    else {\n        participles = getParticiples(sentencePartText, auxiliaries, language);\n    }\n    return determineSentencePartIsPassive(participles);\n};\n//# sourceMappingURL=determinePassiveSentencePart.js.map"]}